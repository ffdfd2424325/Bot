#!/usr/bin/env python3
import sqlite3
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv

load_dotenv()

def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = os.getenv('DATABASE_PATH', 'reports.db')

    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return

    with sqlite3.connect(db_path) as conn:
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor = conn.execute('SELECT COUNT(*) FROM reports')
        total_reports = cursor.fetchone()[0]

        cursor = conn.execute('SELECT COUNT(DISTINCT user_tag) FROM reports')
        unique_users = cursor.fetchone()[0]

        cursor = conn.execute('SELECT COUNT(DISTINCT date(datetime)) FROM reports')
        unique_dates = cursor.fetchone()[0]

        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        print(f"   –í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤: {total_reports}")
        print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {unique_users}")
        print(f"   –î–Ω–µ–π —Å –æ—Ç—á–µ—Ç–∞–º–∏: {unique_dates}")

        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—Ç—á–µ—Ç–æ–≤
        print("\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—Ç—á–µ—Ç–æ–≤:")
        cursor = conn.execute('''
            SELECT user_tag, report_type, datetime, username
            FROM reports
            ORDER BY datetime DESC
            LIMIT 5
        ''')

        reports = cursor.fetchall()
        if reports:
            for report in reports:
                user_tag, report_type, dt, username = report
                dt_formatted = datetime.fromisoformat(dt).strftime('%d.%m %H:%M')
                print(f"   {user_tag} ‚Üí {report_type} ({dt_formatted}) @{username or '–∞–Ω–æ–Ω–∏–º'}")
        else:
            print("   –ù–µ—Ç –æ—Ç—á–µ—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

        # –û—Ç—á–µ—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        today = datetime.now().date().isoformat()
        cursor = conn.execute('SELECT COUNT(*) FROM reports WHERE date(datetime) = ?', (today,))
        today_count = cursor.fetchone()[0]

        print(f"\nüìÖ –û—Ç—á–µ—Ç–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è ({today}): {today_count}")

        if today_count > 0:
            cursor = conn.execute('''
                SELECT user_tag, report_type, datetime
                FROM reports
                WHERE date(datetime) = ?
                ORDER BY datetime DESC
            ''', (today,))

            today_reports = cursor.fetchall()
            for report in today_reports:
                user_tag, report_type, dt = report
                dt_formatted = datetime.fromisoformat(dt).strftime('%H:%M')
                print(f"   {user_tag} ‚Üí {report_type} ({dt_formatted})")

def check_bot_logs():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –±–æ—Ç–∞"""
    print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞:")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π")

if __name__ == "__main__":
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞")
    print("=" * 50)
    check_database()
    check_bot_logs()
    print("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
