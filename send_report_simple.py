#!/usr/bin/env python3
import os
import requests
from datetime import datetime, timedelta
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ main.py
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import ReportDatabase

def send_yesterday_report_simple():
    """–ü—Ä–æ—Å—Ç–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –∑–∞ –≤—á–µ—Ä–∞ –±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ –±–æ—Ç–∞"""
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    chat_id = os.getenv('GROUP_CHAT_ID')

    if not token or not chat_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ GROUP_CHAT_ID")
        return False

    try:
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db = ReportDatabase('reports.db')

        # –ü–æ–ª—É—á–∞–µ–º –≤—á–µ—Ä–∞—à–Ω—é—é –¥–∞—Ç—É
        yesterday = datetime.now() - timedelta(days=1)
        reports = db.get_reports_for_date(yesterday)

        if not reports:
            print("‚ùå –ù–µ—Ç –æ—Ç—á–µ—Ç–æ–≤ –∑–∞ –≤—á–µ—Ä–∞")
            return False

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –∏–∑ main.py)
        from main import PARTICIPANTS, REPORT_TYPES

        date_str = yesterday.strftime("%d.%m.%Y")
        message_parts = [f"üìä **–°–≤–æ–¥–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –∑–∞ {date_str}**\n"]

        all_users = list(PARTICIPANTS.values())
        tag_to_username = {v: k for k, v in PARTICIPANTS.items()}

        for report_type, info in REPORT_TYPES.items():
            submitted_users = []
            late_users = []
            missing_users = []

            if report_type == '–æ—É':
                deadline = datetime.combine(yesterday.date(), info['deadline'])
            else:
                deadline = datetime.combine(yesterday.date(), info['deadline'])

            for user_tag in all_users:
                if user_tag in reports and report_type in reports[user_tag]:
                    submission_time = datetime.fromisoformat(reports[user_tag][report_type]['datetime'])
                    day_number = reports[user_tag][report_type]['day_number']

                    if report_type == '–æ—É' and submission_time.time() > info['deadline']:
                        late_users.append(f"{tag_to_username.get(user_tag, user_tag)}({day_number})")
                    else:
                        submitted_users.append(f"{tag_to_username.get(user_tag, user_tag)}({day_number})")
                else:
                    if report_type == '–æ—É':
                        if datetime.now().time() > info['deadline']:
                            missing_users.append(tag_to_username.get(user_tag, user_tag))
                    else:
                        if datetime.now().date() > yesterday.date():
                            missing_users.append(tag_to_username.get(user_tag, user_tag))

            emoji = {'–æ—Å': 'üèÉ', '–æ—É': 'üåÖ', '–æ–≤': 'üåô', '–≥—Å–¥': '‚≠ê'}[report_type]
            message_parts.append(f"\n{emoji} **{info['name']}:**")

            if submitted_users:
                message_parts.append(f"‚úÖ –í–æ–≤—Ä–µ–º—è: {', '.join(submitted_users)}")

            if late_users:
                message_parts.append(f"‚ö†Ô∏è –û–ø–æ–∑–¥–∞–ª–∏: {', '.join(late_users)}")

            if missing_users:
                message_parts.append(f"‚ùå –ù–µ —Å–¥–∞–ª–∏: {', '.join(missing_users)}")

        report_message = "\n".join(message_parts)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        url = f"https://api.telegram.org/bot{token}/sendMessage"
        data = {"chat_id": chat_id, "text": report_message, "parse_mode": "Markdown"}

        response = requests.post(url, data=data)

        if response.status_code == 200:
            print("‚úÖ –û—Ç—á–µ—Ç –∑–∞ –≤—á–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.text}")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = send_yesterday_report_simple()
    if success:
        print("üéâ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    else:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç.")
