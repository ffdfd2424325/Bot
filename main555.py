# get_ids.py
import asyncio
import logging
import os
from aiogram import Bot, Dispatcher
from aiogram.types import Message

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –í–ê–†–ò–ê–ù–¢ 1: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
# BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –í–ê–†–ò–ê–ù–¢ 2: –í–ø–∏—à–∏—Ç–µ —Ç–æ–∫–µ–Ω –ø—Ä—è–º–æ –∑–¥–µ—Å—å (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω)
BOT_TOKEN = "8128022865:AAFgLxyYWAUZXUtJZ1fjFhUa7GkLI-GZFcE"  # <-- –í–°–¢–ê–í–¨–¢–ï –°–í–û–ô –¢–û–ö–ï–ù –ó–î–ï–°–¨

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if not BOT_TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram")
    exit(1)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –§–ª–∞–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
stop_after_message = False

@dp.message()
async def handle(msg: Message):
    global stop_after_message

    if stop_after_message:
        return

    print("----- –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ -----")
    print("chat.id:", msg.chat.id)
    print("message_thread_id:", getattr(msg, "message_thread_id", None))
    print("from:", msg.from_user.username if msg.from_user else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    print("text:", msg.text)
    print("--------------------------------")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ñ–∞–π–ª –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    with open("chat_info.txt", "w", encoding="utf-8") as f:
        f.write(f"GROUP_CHAT_ID={msg.chat.id}\n")
        if hasattr(msg, "message_thread_id") and msg.message_thread_id:
            f.write(f"REPORTS_TOPIC_ID={msg.message_thread_id}\n")
        f.write(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: @{msg.from_user.username if msg.from_user.username else 'unknown'}\n")
        f.write(f"–¢–µ–∫—Å—Ç: {msg.text}\n")

    print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª chat_info.txt")
    print("–¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ñ–∞–π–ª .env")

    # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
    stop_after_message = True
    await dp.stop_polling()
    await bot.session.close()

async def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
    print("üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–º—É '–û—Ç—á—ë—Ç—ã' –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã")
    print("‚èπÔ∏è  –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è")
    print()

    try:
        await dp.start_polling(bot)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    asyncio.run(main())
